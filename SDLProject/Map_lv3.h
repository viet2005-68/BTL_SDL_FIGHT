#pragma once

#include <SDL.h>
#include "TextureManager.h"
#include <vector>
#include <queue>
#include "Player.h"
#include "Game.h"
#include "Map.h"
struct Tile3 {
public:
    Tile3() {}
    Tile3(int x, int y, int type) {
        mBox.x = x;
        mBox.y = y;
        mBox.w = 32;
        mBox.h = 32;
        mtype = type;
    }

    void Text(SDL_Texture* tex) {
        TileTex = tex;
    }

    /*void draw() {
        TextureManager::Instance()->drawMap(TileTex, mBox);
    }*/
    SDL_Rect getRect() {
        return mBox;
    }
    int type() {
        return mtype;
    }


    bool visited;
    SDL_Rect mBox;
    int mtype;
private:

    SDL_Texture* TileTex;
    // int mtype;

};
class Map_lv3
{
public:
    Map_lv3();
    ~Map_lv3();
    void CleanMap();
    void LoadMap(int arr[25][40]);
    //void LoadLayer3(int arr[17][40]);
    void LoadLayer2(int arr[25][40]);
    void drawLayer1();
    void drawLayer2();
    void drawLayer3();
    void DrawMap();
    static Map_lv3* getInstance() {
        if (m_Instance == nullptr) { m_Instance = new Map_lv3(); }
        return m_Instance;
    }
    bool checkwall(SDL_Rect a, SDL_Rect b);

    bool iswall(SDL_Rect player);
    bool check_x_y(int x, int y);
    //std::vector<std::vector<int>> getTileMap();
    //bool FindPath(SDL_Rect& player, SDL_Rect& destination);
    std::pair<int, int> FindPath(SDL_Rect& player, SDL_Rect& destination);
    std::pair<int, int> FindOptimalPath(SDL_Rect& player, SDL_Rect& destination);
    std::pair<int, int> FindPathAStar(SDL_Rect& player, SDL_Rect& destination);
    int FindBFSPath(SDL_Rect& player, SDL_Rect& destination, int x);
    bool isDestination(SDL_Rect player, SDL_Rect destination) {
        // Tính toán trung tâm của người chơi và đích
        int playerCenterX = player.x + player.w / 2;
        int playerCenterY = player.y + player.h / 2;
        int destinationCenterX = destination.x + destination.w / 2;
        int destinationCenterY = destination.y + destination.h / 2;





        // Kiểm tra xem trung tâm của người chơi có nằm trong đích hay không
        if (playerCenterX >= destination.x && playerCenterX <= destination.x + destination.w &&
            playerCenterY >= destination.y && playerCenterY <= destination.y + destination.h) {
            return true;
        }

        return false;
    }

private:
    SDL_Rect Map_Src, MAP_des;
    static Map_lv3* m_Instance;
    SDL_Texture* m_Texture;
    SDL_Texture* Text_24;
    //SDL_Texture* house;
    Tile3* Map_in[25][40];
    int heuristic(int x1, int y1, int x2, int y2) {
        return abs(x1 - x2) + abs(y1 - y2);
    }
    int layer2[25][40] =
    { {82,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,84},
    {122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,110,0,0,0,0,0,0,123},
    {122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,490,0,0,0,0,0,0,0,0,0,0,0,0,117,126,0,0,0,0,0,0,123},
    {122,0,0,0,0,0,490,0,0,0,0,0,0,0,0,0,0,0,506,0,0,0,0,0,0,0,0,0,0,0,0,141,142,0,0,0,0,0,0,123},
    {122,0,0,0,0,0,506,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,162,163,164,165,162,163,164,165,162,163,164,165,0,0,162,163,164,165,162,163,164,165,162,163},
    {122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,178,179,180,181,178,179,180,181,178,179,180,181,0,0,178,179,180,181,178,179,180,181,178,179},
    {162,163,164,165,162,163,164,165,0,0,162,163,164,165,162,163,406,0,0,1024,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {178,179,180,181,178,179,180,181,0,0,178,179,180,181,178,179,422,1038,1039,1040,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,476,477,478,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,490,490,490,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,492,493,494,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,506,506,506,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,508,509,510,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,82,83,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,110,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,98,99,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,126,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,114,115,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,142,0,0,123},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,0,130,131,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {162,163,164,165,162,163,164,165,162,163,164,165,162,163,164,165,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123},
    {178,179,180,181,178,179,180,181,178,179,180,181,178,179,180,181,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,116} };


    int layer3[25][40] =
    { {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,362,363,0,0,0,0,0,0,488,488,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,504,504,0,0,0,0,0,0,0},
{0,0,0,0,0,0,428,0,0,0,0,0,0,33,33,33,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,33,33,33,33,0,0},
{0,0,0,33,33,0,444,0,0,0,0,0,0,33,33,0,0,0,0,0,0,33,33,33,33,33,0,0,0,0,0,0,0,0,33,33,33,33,0,0},
{0,0,0,33,33,33,460,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,994,995,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,420,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1010,1011,0,0,0,0,0,0,0,346,347,0},
{0,0,0,0,0,0,0,0,994,995,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1026,1027,0,0,0,0,0,0,0,362,363,0},
{0,0,406,346,347,0,0,0,1010,1011,0,0,0,0,0,406,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,422,362,363,0,0,0,1026,1027,0,0,0,0,0,422,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,378,379,0,0,0,0,0,0,0,0,0,0,33,33,33,33,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,394,395,0,33,0,0,0,0,0,0,0,33,33,0,0,33,33,0},
{0,0,0,0,0,0,0,376,0,0,33,33,33,0,0,0,0,0,0,0,33,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,392,0,0,33,33,0,0,0,0,0,0,0,0,33,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,408,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,351,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,488,488,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,367,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,504,504,0,0,0},
{0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,383,0,0,0,0,0,0,0,33,33,33,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33,33,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} };
    int layer1[25][40] =
    { {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,33,33,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,17,13,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,17,13,17,17,17,17,17,17,17,17,17,17,13,13,17},
    {17,17,17,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17},
    {17,17,17,17,17,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,13,17,17},
    {17,17,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,13,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,13,13,13,17,17,17,17,17,17,17,13,13,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,17,17,17,17,17,17,13,13,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,33,33,33,17,17,17,13,13,17,17,17,17,13,17,17,17,17,33,33,17,17,17},
    {17,17,17,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,33,33,33,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17},
    {17,17,13,13,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,13,13,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17},
    {17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17} };
    int check_lv3[25][40] =
    { {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
{1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1},
{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1},
{1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1} };
};


